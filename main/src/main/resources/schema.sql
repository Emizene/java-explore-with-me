DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS participation_requests CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilation_events CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS user_roles CASCADE;
DROP TABLE IF EXISTS event_statistics CASCADE;

CREATE TABLE users
    (id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR(250) NOT NULL,
    email   VARCHAR(254) NOT NULL UNIQUE,
    created TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    status  VARCHAR(20) DEFAULT 'ACTIVE',
    CONSTRAINT uq_user_email UNIQUE (email));

CREATE TABLE categories
    (id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(50) NOT NULL UNIQUE,
    description TEXT,
    created     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_category_name UNIQUE (name));

CREATE TABLE locations
    (id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat     FLOAT NOT NULL,
    lon     FLOAT NOT NULL,
    address VARCHAR(500),
    name    VARCHAR(100),
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP);

CREATE TABLE events
    (id                BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(2000) NOT NULL,
    description        VARCHAR(7000),
    title              VARCHAR(120)  NOT NULL,
    event_date         TIMESTAMP     NOT NULL,
    created_on         TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    published_on       TIMESTAMP,
    paid               BOOLEAN     DEFAULT FALSE,
    participant_limit  INTEGER     DEFAULT 0,
    request_moderation BOOLEAN     DEFAULT TRUE,
    state              VARCHAR(20) DEFAULT 'PENDING',
    views              BIGINT      DEFAULT 0,
    confirmed_requests INTEGER     DEFAULT 0,

    initiator_id       BIGINT        NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    category_id        BIGINT        NOT NULL REFERENCES categories (id) ON DELETE RESTRICT,
    location_id        BIGINT        NOT NULL REFERENCES locations (id) ON DELETE RESTRICT,

    CONSTRAINT chk_event_state CHECK (state IN ('PENDING', 'PUBLISHED', 'CANCELED')));
    CREATE INDEX idx_events_initiator ON events (initiator_id);
    CREATE INDEX idx_events_category ON events (category_id);
    CREATE INDEX idx_events_state ON events (state);
    CREATE INDEX idx_events_event_date ON events (event_date);

CREATE TABLE requests
    (id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created      TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    status       VARCHAR(20) DEFAULT 'PENDING',

    requester_id BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    event_id     BIGINT NOT NULL REFERENCES events (id) ON DELETE CASCADE,

    CONSTRAINT uq_request_user_event UNIQUE (requester_id, event_id),
    CONSTRAINT chk_request_status CHECK (status IN ('PENDING', 'CONFIRMED', 'REJECTED', 'CANCELED')));

    CREATE INDEX idx_requests_requester ON requests (requester_id);
    CREATE INDEX idx_requests_event ON requests (event_id);
    CREATE INDEX idx_requests_status ON requests (status);

CREATE TABLE compilations
    (id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title       VARCHAR(50) NOT NULL UNIQUE,
    pinned      BOOLEAN   DEFAULT FALSE,
    description VARCHAR(500),
    created     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_compilation_title UNIQUE (title));

CREATE TABLE compilation_events
    (compilation_id BIGINT NOT NULL REFERENCES compilations (id) ON DELETE CASCADE,
    event_id       BIGINT NOT NULL REFERENCES events (id) ON DELETE CASCADE,
    added_date     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (compilation_id, event_id));

    CREATE INDEX idx_compilation_events_comp ON compilation_events (compilation_id);
    CREATE INDEX idx_compilation_events_event ON compilation_events (event_id);

CREATE TABLE comments
    (id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text              VARCHAR(2000) NOT NULL,
    created           TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    updated           TIMESTAMP,
    status            VARCHAR(20) DEFAULT 'PUBLISHED',

    author_id         BIGINT        NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    event_id          BIGINT        NOT NULL REFERENCES events (id) ON DELETE CASCADE,
    parent_comment_id BIGINT REFERENCES comments (id) ON DELETE CASCADE,

    CONSTRAINT chk_comment_status CHECK (status IN ('PENDING', 'PUBLISHED', 'DELETED')));

    CREATE INDEX idx_comments_author ON comments (author_id);
    CREATE INDEX idx_comments_event ON comments (event_id);
    CREATE INDEX idx_comments_parent ON comments (parent_comment_id);

CREATE TABLE roles
    (id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(50) NOT NULL UNIQUE,
    description VARCHAR(200),
    CONSTRAINT uq_role_name UNIQUE (name));

CREATE TABLE user_roles
    (user_id      BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    role_id       BIGINT NOT NULL REFERENCES roles (id) ON DELETE CASCADE,
    assigned_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, role_id));

    CREATE INDEX idx_user_roles_user ON user_roles (user_id);
    CREATE INDEX idx_user_roles_role ON user_roles (role_id);

CREATE TABLE event_statistics
    (id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id        BIGINT NOT NULL REFERENCES events (id) ON DELETE CASCADE,
    views           BIGINT    DEFAULT 0,
    unique_visitors INTEGER   DEFAULT 0,
    statistic_date  DATE   NOT NULL,
    created         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_stat_event_date UNIQUE (event_id, statistic_date));

    CREATE INDEX idx_statistics_event ON event_statistics (event_id);
    CREATE INDEX idx_statistics_date ON event_statistics (statistic_date);

INSERT INTO roles (name, description)
VALUES ('USER', 'Обычный пользователь'),
       ('ADMIN', 'Администратор системы'),
       ('MODERATOR', 'Модератор контента');

INSERT INTO categories (name, description)
VALUES ('Концерты', 'Музыкальные мероприятия и выступления'),
       ('Выставки', 'Художественные и культурные выставки'),
       ('Спорт', 'Спортивные мероприятия и соревнования'),
       ('Образование', 'Образовательные мероприятия и лекции'),
       ('Развлечения', 'Развлекательные мероприятия и шоу');